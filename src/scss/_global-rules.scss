// ======================================
// ðŸŒˆ THEME VARIABLES
// ======================================

// --- Light Theme (Default) ---
:root {
  // Background colors
  --bg-1: #97d6b5;
  --bg-2: #fbf9f3;
  --bg-3: #eae8e4;
  --bg-4: #fff;
  --btn-bg: linear-gradient(to left top in lch, #8dc693, #a2e1cb);
  --btn-bg-2: #eae8e4;
  --overlay-bg: rgba(0, 0, 0, 0.2);

  // Text & accent colors
  --c-1: #000;
  --c-2: #6aab8b;
  --c-3: #5b515f;
  --c-4: #5b5146;

  // Shadows
  --shadow-c-1: #0000004d;
  --shadow-c-2: #0000001a;

  // Animation speed
  --main-trans: 0.4s;
}

// --- Dark Theme ---
// Applied by adding `.dark-theme` to the <body> element
.dark-theme {
  // Background colors
  --bg-1: #3d6953;
  --bg-2: #3c3b38;
  --bg-3: #32302d;
  --bg-4: #27261f;
  --btn-bg: linear-gradient(to left top in lch, #365a3b, #457364);
  --btn-bg-2: #32302d;

  // Text & accent colors
  --c-1: #fff;
  --c-2: #36946b;
  --c-3: #eee;
  --c-4: #dad3cd;

  // Shadows (optional override if needed)
  // --shadow-c-1: #0000004d;
}

// ======================================
// ðŸ›  GLOBAL RESET & BASE STYLES
// ======================================
* {
  font-family: "Noto Sans", sans-serif;
  box-sizing: content-box;
  margin: 0;
  padding: 0;

  // Smooth transitions for interactive elements
  transition-duration: var(--main-trans);
  transition-timing-function: ease-out;
}

// ======================================
// ðŸ“± RESPONSIVE MIXIN
// ======================================
/// Mixin: Apply styles within a media query
///
/// @param {String|null} $min-width - Minimum width (e.g., "600px") or null.
/// @param {String|null} $max-width - Maximum width (e.g., "900px") or null.
/// @param {String}      $selector  - The selector to style (e.g., ".my-class").
/// @param {Map}         $styles    - Map of CSS properties and values.
///
/// Usage:
///   @include apply-style-with-media-query(null, "900px", ".box", (color: red, font-size: 16px));
///
/// Logic:
///   - Only max-width  â†’ mobile-first styles
///   - Only min-width  â†’ desktop-first styles
///   - Both set        â†’ between breakpoints
///
@mixin apply-style-with-media-query(
  $min-width,
  $max-width,
  $selector,
  $styles
) {
  @if $max-width != null and $min-width == null {
    // --- Max-width only ---
    @media (max-width: #{$max-width}) {
      #{$selector} {
        @each $prop, $val in $styles {
          #{$prop}: #{$val};
        }
      }
    }
  } @else if $min-width != null and $max-width == null {
    // --- Min-width only ---
    @media (min-width: #{$min-width}) {
      #{$selector} {
        @each $prop, $val in $styles {
          #{$prop}: #{$val};
        }
      }
    }
  } @else if $min-width != null and $max-width != null {
    // --- Between min and max ---
    @media (min-width: #{$min-width}) and (max-width: #{$max-width}) {
      #{$selector} {
        @each $prop, $val in $styles {
          #{$prop}: #{$val};
        }
      }
    }
  }
}
